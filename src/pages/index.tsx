/* eslint-disable @next/next/no-img-element */
import { NextPage, GetStaticProps } from 'next'
import Head from 'next/head'
import { useState } from 'react'
import styled from 'styled-components'
import { getAggregatedPosts } from '../utils/fetchRSS'
import { ArticleList } from '@/components/template/ArticleList/ArticleList'
import { Footer } from '@/components/template/Footer/Footer'
import { SideBar } from '@/components/template/SideBar/SideBar'
import styles from '@/styles/Home.module.css'
import { theme } from '@/themes'
import { RssPost } from '@/utils/rss'

const Main = styled.main`
  padding: 0;
  background: ${theme.colors.primary};
  position: relative;
  &::before {
    content: '';
    position: absolute;
    top: 195px;
    left: 0;
    width: 100%;
    height: 130px;
    background: repeating-linear-gradient(
      ${theme.colors.primary},
      ${theme.colors.primary} 62px,
      ${theme.colors.gray1} 63px,
      ${theme.colors.gray1} 65px
    );
    z-index: 1;
  }
  &::after {
    content: '';
    position: absolute;
    top: 325px;
    left: 0;
    width: 100%;
    height: 90%;
    background: repeating-linear-gradient(
      ${theme.colors.primary},
      ${theme.colors.primary} 30px,
      ${theme.colors.gray1} 30.5px,
      ${theme.colors.gray1} 31px
    );
    z-index: 0;
    @media (width <= ${theme.breakpoints.mobile}) {
      height: 100%;
    }
  }
`
const LogoImage = styled.img`
  width: 400px;
  margin: 60px auto;
  position: relative;
  z-index: 5;
`

const BlogSection = styled.section`
  positon: relative;
  z-index: 5;
  display: flex;
  flex-direction: row;
  @media (width < ${theme.breakpoints.pc}) {
    flex-direction: column;
  }
`
type IndexProps = {
  posts: RssPost[]
}

const IndexPage: NextPage<IndexProps> = ({ posts }) => {
  const notePosts = posts.filter((post) => post.source === 'note.com')
  const zennPosts = posts.filter((post) => post.source === 'zenn.dev')
  const [currentCategory, setCurrentCategory] = useState<'note' | 'zenn' | undefined>(undefined)
  const handleCategoryChange = (source: 'note' | 'zenn' | undefined) => {
    setCurrentCategory(source)
  }
  return (
    <>
      <Head>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Main className={styles.main}>
        <a href='#'>
          <LogoImage src='/images/logo.png' alt='logo' />
        </a>
        <BlogSection>
          {currentCategory === 'note' ? (
            <ArticleList posts={notePosts} />
          ) : currentCategory === 'zenn' ? (
            <ArticleList posts={zennPosts} />
          ) : (
            <ArticleList posts={posts} />
          )}
          <SideBar posts={posts} onCategoryChange={handleCategoryChange} />
        </BlogSection>
      </Main>
      <Footer />
    </>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const posts = await getAggregatedPosts()

  return { props: { posts }, revalidate: 60 }
}

export default IndexPage
